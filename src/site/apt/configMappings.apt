~~~
~~ #%L
~~ settings4j
~~ ===============================================================
~~ Copyright (C) 2008 - 2015 Brabenetz Harald, Austria
~~ ===============================================================
~~ Licensed under the Apache License, Version 2.0 (the "License");
~~ you may not use this file except in compliance with the License.
~~ You may obtain a copy of the License at
~~ 
~~      http://www.apache.org/licenses/LICENSE-2.0
~~ 
~~ Unless required by applicable law or agreed to in writing, software
~~ distributed under the License is distributed on an "AS IS" BASIS,
~~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~~ See the License for the specific language governing permissions and
~~ limitations under the License.
~~ #L%
~~~
                                    ------------------
                                    Mapping Configuration
                                    ------------------
                                    Brabenetz Harald
                                    ------------------
                                    11-05-2008
                                    ------------------

{Overview}

	If you use your own <<<classpath:settings4j.xml>>>, then you can configure Mappings for your Keys (aliases).
	
{Example}

	Assuming you have one Application with two modules which needs the same Webservice URL.\
	And you want configure the WebService URL only one time.
	
	You can do the following:
	
+--------------
<settings4j:configuration xmlns:settings4j='http://settings4j.org/'>

	<connector name="SystemPropertyConnector" class="org.settings4j.connector.SystemPropertyConnector">
	</connector>
	
	<mapping name="defaultMapping">
		<entry key="com/mycompany/moduleX/webserviceXY" ref-key="global/webserviceXY"/>
		<entry key="com/mycompany/moduleY/webserviceXY" ref-key="global/webserviceXY"/>
	</mapping>

</settings4j:configuration>
+--------------

	Configure the Webservice URL one time with <<<System.setProperty("global/webserviceXY", "MYURL");>>>\
	<<<Settings4j.getString("com/mycompany/moduleX/webserviceXY");>>> will return the URL.\
	And <<<Settings4j.getString("com/mycompany/moduleY/webserviceXY");>>> will return the same URL.
	
	
	
